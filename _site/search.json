[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and application"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "In this webpage, you will find my learning jurney and deliverables of ISSS608 Visual Analytics and Applications."
  },
  {
    "objectID": "Handson-Exceriise/Handson_00/Handson_Ex00.html",
    "href": "Handson-Exceriise/Handson_00/Handson_Ex00.html",
    "title": "Handson Exercise 00: working with tidyverse",
    "section": "",
    "text": "Geetting started\nLoad tidyverse onto r environment by using the code chunk below.\n\npacman::p_load(tidyverse)\n\nimporting data\n\nrealis2019 &lt;- read_csv(\"data/REALIS2019.csv\")"
  },
  {
    "objectID": "Handson-Exercise/Handson_00/Handson_Ex00.html",
    "href": "Handson-Exercise/Handson_00/Handson_Ex00.html",
    "title": "Handson Exercise 00: working with tidyverse",
    "section": "",
    "text": "Geetting started\nLoad tidyverse onto r environment by using the code chunk below.\n\npacman::p_load(tidyverse)\n\nimporting data\n\nrealis2019 &lt;- read_csv(\"data/REALIS2019.csv\")\n\n\npopdata_fat &lt;- read_csv(\"data/PopData2019_fat.csv\")\n\nPivoting data\n\npopdata_long &lt;- popdata_fat %&gt;%\n  pivot_longer(c(3:21),\n               names_to = \"Age group\",\n               values_to = \"Population\")\n\n\nwrite_rds(popdata_long, \"rds/popdata_long.rds\")"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html",
    "title": "Handson_Ex01",
    "section": "",
    "text": "In this chapter, you will learn the basic principles and essential components of ggplot2. At the same time, you will gain hands-on experience on using these components to plot statistical graphics based on the principle of Layered Grammar of Graphics. By then end of this chapter you will be able to apply the essential graphical elements provided by ggplot2 to create elegant and yet functional statistical graphics."
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#install-and-launching-r-packages",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#install-and-launching-r-packages",
    "title": "Handson_Ex01",
    "section": "1.2.1 Install and launching R packages",
    "text": "1.2.1 Install and launching R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#importing-the-data",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#importing-the-data",
    "title": "Handson_Ex01",
    "section": "1.2.2 Importing the data",
    "text": "1.2.2 Importing the data\nIn this chapter, you will learn the basic principles and essential components of ggplot2. At the same time, you will gain hands-on experience on using these components to plot statistical graphics based on the principle of Layered Grammar of Graphics. By then end of this chapter you will be able to apply the essential graphical elements provided by ggplot2 to create elegant and yet functional statistical graphics.\n\nexam_data &lt;- read.csv(\"data/Exam_data.csv\")\n\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#plotting-a-simple-bar-chart",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#plotting-a-simple-bar-chart",
    "title": "Handson_Ex01",
    "section": "",
    "text": "ggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#ggplot",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#ggplot",
    "title": "Handson_Ex01",
    "section": "ggplot",
    "text": "ggplot\n\n# echo: false\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"#BF88FA\") +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#r-graphics",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#r-graphics",
    "title": "Handson_Ex01",
    "section": "R Graphics",
    "text": "R Graphics\n\nhist(exam_data$MATHS, col = rainbow(10), border = \"black\")\n\n\n\n\n\n\n\n\n\nWhy ggplot2 is recommended?\nPersonally, I believe that ggplot2 allows furthur adjustments meaning we can customize the chart better."
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#a-layered-grammar-of-graphics",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#a-layered-grammar-of-graphics",
    "title": "Handson_Ex01",
    "section": "1.4.1 A Layered Grammar of Graphics",
    "text": "1.4.1 A Layered Grammar of Graphics"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#geometric-objects-geom_bar",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#geometric-objects-geom_bar",
    "title": "Handson_Ex01",
    "section": "1.7.1 Geometric Objects: geom_bar",
    "text": "1.7.1 Geometric Objects: geom_bar\nThe code chunk below plots a bar chart by using geom_bar()."
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#geometric-objects-geom_dotplot",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#geometric-objects-geom_dotplot",
    "title": "Handson_Ex01",
    "section": "1.7.2 Geometric Objects: geom_dotplot",
    "text": "1.7.2 Geometric Objects: geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\nIn the code chunk below, geom_dotplot() of ggplot2 is used to plot a dot plot.\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#geometric-objects-geom_histogram",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#geometric-objects-geom_histogram",
    "title": "Handson_Ex01",
    "section": "1.7.3 Geometric Objects: geom_histogram()",
    "text": "1.7.3 Geometric Objects: geom_histogram()\nIn the code chunk below, geom_histogram() is used to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Handson_Ex01",
    "section": "1.7.4 Modifying a geometric object by changing geom()",
    "text": "1.7.4 Modifying a geometric object by changing geom()\nIn the code chunk below,\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline colour of the bars in black\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Handson_Ex01",
    "section": "1.7.5 Modifying a geometric object by changing aes()",
    "text": "1.7.5 Modifying a geometric object by changing aes()\n\nThe code chunk below changes the interior colour of the histogram (i.e.Â fill) by using sub-group of aesthetic().\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#geometric-objects-geom-density",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#geometric-objects-geom-density",
    "title": "Handson_Ex01",
    "section": "1.7.6 Geometric Objects: geom-density()",
    "text": "1.7.6 Geometric Objects: geom-density()\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\n\n\n\n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Handson_Ex01",
    "section": "1.7.7 Geometric Objects: geom_boxplot",
    "text": "1.7.7 Geometric Objects: geom_boxplot\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all âoutlyingâ points individually.\nThe code chunk below plots boxplots by using geom_boxplot().\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#geometric-objects-geom_violin",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#geometric-objects-geom_violin",
    "title": "Handson_Ex01",
    "section": "1.7.8 Geometric Objects: geom_violin",
    "text": "1.7.8 Geometric Objects: geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, itâs easier to compare several distributions since theyâre placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#geometric-objects-geom_point",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#geometric-objects-geom_point",
    "title": "Handson_Ex01",
    "section": "1.7.9 Geometric Objects: geom_point()",
    "text": "1.7.9 Geometric Objects: geom_point()\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#geom-objects-can-be-combined",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#geom-objects-can-be-combined",
    "title": "Handson_Ex01",
    "section": "1.7.10 geom objects can be combined",
    "text": "1.7.10 geom objects can be combined\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#working-with-stat",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#working-with-stat",
    "title": "Handson_Ex01",
    "section": "1.8.1 Working with stat()",
    "text": "1.8.1 Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Handson_Ex01",
    "section": "1.8.2 Working with stat - the stat_summary() method",
    "text": "1.8.2 Working with stat - the stat_summary() method\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#working-with-stat---the-geom-method",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#working-with-stat---the-geom-method",
    "title": "Handson_Ex01",
    "section": "1.8.3 Working with stat - the geom() method",
    "text": "1.8.3 Working with stat - the geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Handson_Ex01",
    "section": "1.8.4 Adding a best fit curve on a scatterplot?",
    "text": "1.8.4 Adding a best fit curve on a scatterplot?\nIn the code chunk below, geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nâ¹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThe default smoothing method can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#working-with-facet_wrap",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#working-with-facet_wrap",
    "title": "Handson_Ex01",
    "section": "1.9.1 Working with facet_wrap()",
    "text": "1.9.1 Working with facet_wrap()\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nThe code chunk below plots a trellis plot using facet-wrap().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#facet_grid-function",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#facet_grid-function",
    "title": "Handson_Ex01",
    "section": "1.9.2 facet_grid() function",
    "text": "1.9.2 facet_grid() function\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nThe code chunk below plots a trellis plot using facet_grid().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#working-with-coordinate",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#working-with-coordinate",
    "title": "Handson_Ex01",
    "section": "1.10.1 Working with Coordinate",
    "text": "1.10.1 Working with Coordinate\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nThe code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Handson_Ex01",
    "section": "1.10.2 Changing the y- and x-axis range",
    "text": "1.10.2 Changing the y- and x-axis range\nThe scatterplot on the right is slightly misleading because the y-aixs and x-axis range are not equal.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Handson-Exercise/Handson_01/Handson_Ex01.html#working-with-theme",
    "href": "Handson-Exercise/Handson_01/Handson_Ex01.html#working-with-theme",
    "title": "Handson_Ex01",
    "section": "1.11.1 Working with theme",
    "text": "1.11.1 Working with theme\nThe code chunk below plot a horizontal bar chart using theme_gray().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n\n\nA horizontal bar chart plotted using theme_classic().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n\n\nA horizontal bar chart plotted using theme_minimal().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Handson-Exercise/Handson_02/Handson_Ex02.html",
    "href": "Handson-Exercise/Handson_02/Handson_Ex02.html",
    "title": "Handson_Ex02",
    "section": "",
    "text": "In this chapter, you will be introduced to several ggplot2 extensions for creating more elegant and effective statistical graphics. By the end of this exercise, you will be able to:\n\ncontrol the placement of annotation on a graph by using functions provided in ggrepel package,\ncreate professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,\nplot composite figure by combining ggplot2 graphs by using patchwork package."
  },
  {
    "objectID": "Handson-Exercise/Handson_02/Handson_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Handson-Exercise/Handson_02/Handson_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Handson_Ex02",
    "section": "2.2.1 Installing and loading the required libraries",
    "text": "2.2.1 Installing and loading the required libraries\nIn this exercise, beside tidyverse, four R packages will be used. They are:\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for âggplot2â.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\nCode chunk below will be used to check if these packages have been installed and also will load them onto your working R environment.\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Handson-Exercise/Handson_02/Handson_Ex02.html#importing-data",
    "href": "Handson-Exercise/Handson_02/Handson_Ex02.html#importing-data",
    "title": "Handson_Ex02",
    "section": "2.2.2 Importing data",
    "text": "2.2.2 Importing data\n\nexam_data &lt;- read_csv(\"Exam_data.csv\")"
  },
  {
    "objectID": "Handson-Exercise/Handson_02/Handson_Ex02.html#working-with-ggrepel",
    "href": "Handson-Exercise/Handson_02/Handson_Ex02.html#working-with-ggrepel",
    "title": "Handson_Ex02",
    "section": "2.3.1 Working with ggrepel",
    "text": "2.3.1 Working with ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Handson-Exercise/Handson_02/Handson_Ex02.html#working-with-ggtheme-package",
    "href": "Handson-Exercise/Handson_02/Handson_Ex02.html#working-with-ggtheme-package",
    "title": "Handson_Ex02",
    "section": "2.4.1 Working with ggtheme package",
    "text": "2.4.1 Working with ggtheme package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "Handson-Exercise/Handson_02/Handson_Ex02.html#working-with-hrbthems-package",
    "href": "Handson-Exercise/Handson_02/Handson_Ex02.html#working-with-hrbthems-package",
    "title": "Handson_Ex02",
    "section": "2.4.2 Working with hrbthems package",
    "text": "2.4.2 Working with hrbthems package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\n\n\n\nWhat can we learn from the code chunk above?\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15,\ngrid argument is used to remove the x-axis grid lines."
  },
  {
    "objectID": "Handson-Exercise/Handson_02/Handson_Ex02.html#creating-composite-graphics-pathwork-methods",
    "href": "Handson-Exercise/Handson_02/Handson_Ex02.html#creating-composite-graphics-pathwork-methods",
    "title": "Handson_Ex02",
    "section": "2.5.1 Creating Composite Graphics: pathwork methods",
    "text": "2.5.1 Creating Composite Graphics: pathwork methods\nThere are several ggplot2 extensionâs functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Hereâs the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /"
  },
  {
    "objectID": "Handson-Exercise/Handson_02/Handson_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Handson-Exercise/Handson_02/Handson_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Handson_Ex02",
    "section": "2.5.2 Combining two ggplot2 graphs",
    "text": "2.5.2 Combining two ggplot2 graphs\nFigure in the tabset below shows a composite of two histograms created using patchwork. Note how simple the syntax used to create the plot!\n\np1 + p2"
  },
  {
    "objectID": "Handson-Exercise/Handson_02/Handson_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Handson-Exercise/Handson_02/Handson_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Handson_Ex02",
    "section": "2.5.3 Combining three ggplot2 graphs",
    "text": "2.5.3 Combining three ggplot2 graphs\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\nâ/â operator to stack two ggplot2 graphs,\nâ|â operator to place the plots beside each other,\nâ()â operator the define the sequence of the plotting.\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\nTo learn more about, refer to Plot Assembly."
  },
  {
    "objectID": "Handson-Exercise/Handson_02/Handson_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Handson-Exercise/Handson_02/Handson_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Handson_Ex02",
    "section": "2.5.4 Creating a composite figure with tag",
    "text": "2.5.4 Creating a composite figure with tag\nIn order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Handson-Exercise/Handson_02/Handson_Ex02.html#creating-figure-with-insert",
    "href": "Handson-Exercise/Handson_02/Handson_Ex02.html#creating-figure-with-insert",
    "title": "Handson_Ex02",
    "section": "2.5.5 Creating figure with insert",
    "text": "2.5.5 Creating figure with insert\nBeside providing functions to place plots next to each other based on the provided layout. With inset_element() of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.\nWe can adjust the position of adhere small chart.\n\np3 + inset_element(p2, \n                   left = 0.015, \n                   bottom = 0.65, \n                   right = 0.45, \n                   top = 1)"
  },
  {
    "objectID": "Handson-Exercise/Handson_02/Handson_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Handson-Exercise/Handson_02/Handson_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Handson_Ex02",
    "section": "2.5.6 Creating a composite figure by using patchwork and ggtheme",
    "text": "2.5.6 Creating a composite figure by using patchwork and ggtheme\nFigure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  }
]