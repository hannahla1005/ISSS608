---
title: "15  Visual Multivariate Analysis with Parallel Coordinates Plot"
author: "TzuTing Huang, (hannah)"
date: "February 12, 2025"
date-modified: "last-modified"
execute:
  warning: false
---

## **15.1 Overview**

Parallel coordinates plot is a data visualisation specially designed for visualising and analysing multivariate, numerical data.

-   plotting statistic parallel coordinates plots by using *ggparcoord()* of **GGally** package,

-   plotting interactive parallel coordinates plots by using **parcoords** package, and

-   plotting interactive parallel coordinates plots by using **parallelPlot** package.

## **15.2 Installing and Launching R Packages**

The **GGally**, **parcoords**, **parallelPlot** and **tidyverse** packages will be used.

The code chunks below are used to install and load the packages in R.

```{R}
pacman::p_load(GGally, parallelPlot, tidyverse)
```

## **15.3 Data Preparation**

```{R}
wh <- read_csv("data/WHData-2018.csv")
```

## **15.4 Plotting Static Parallel Coordinates Plot**

Let's learn how to plot static parallel coordinates plot by using [`ggparcoord()`](https://ggobi.github.io/ggally/reference/ggparcoord.html) of **GGally** package.

### **15.4.1 Plotting a simple parallel coordinates**

Code chunk below shows a typical syntax used to plot a basic static parallel coordinates plot by using `ggparcoord()`.

```{R}
ggparcoord(data = wh, 
           columns = c(7:12))
```

Notice that only two argument namely `data` and `columns` is used.

`Data` argument is used to map the data object (i.e. *wh*) and `columns` is used to select the columns for preparing the parallel coordinates plot.

### **15.4.2 Plotting a parallel coordinates with boxplot**

The basic parallel coordinates failed to reveal any meaning understanding of the World Happiness measures. Let's learn how to makeover the plot by using a collection of arguments provided by `ggparcoord()`.

```{R}
ggparcoord(data = wh, 
           columns = c(7:12), 
           groupColumn = 2,
           scale = "uniminmax",
           alphaLines = 0.2,
           boxplot = TRUE, 
           title = "Parallel Coordinates Plot of World Happines Variables")
```

Things to learn from the code chunk above.

-   `groupColumn` argument is used to group the observations (i.e. parallel lines) by using a single variable (i.e. Region) and colour the parallel coordinates lines by region name.

-   `scale` argument is used to scale the variables in the parallel coordinate plot by using `uniminmax` method. The method univariately scale each variable so the minimum of the variable is zero and the maximum is one.

-   `alphaLines` argument is used to reduce the intensity of the line colour to 0.2. The permissible value range is between 0 to 1.

-   `boxplot` argument is used to turn on the boxplot by using logical `TRUE`. The default is `FALSE`.

-   `title` argument is used to provide the parallel coordinates plot a title.

### **15.4.3 Parallel coordinates with facet**

Since `ggparcoord()` is developed by extending **ggplot2** package, we can combination use some of the ggplot2 function when plotting a parallel coordinates plot.

In the code chunk below, `facet_wrap()` of **ggplot2** is used to plot 10 small multiple parallel coordinates plots. Each plot represent one geographical region such as East Asia.

```{R}
ggparcoord(data = wh, 
           columns = c(7:12), 
           groupColumn = 2,
           scale = "uniminmax",
           alphaLines = 0.2,
           boxplot = TRUE, 
           title = "Multiple Parallel Coordinates Plots of World Happines Variables by Region") +
  facet_wrap(~ Region)
```

### **15.4.4 Rotating x-axis text label**

To make the x-axis text label easy to read, let us rotate the labels by 30 degrees. We can rotate axis text labels using `theme()` function in ggplot2 as shown in the code chunk below

```{R}
ggparcoord(data = wh, 
           columns = c(7:12), 
           groupColumn = 2,
           scale = "uniminmax",
           alphaLines = 0.2,
           boxplot = TRUE, 
           title = "Multiple Parallel Coordinates Plots of World Happines Variables by Region") +
  facet_wrap(~ Region) + 
  theme(axis.text.x = element_text(angle = 30))
```

### **15.4.5 Adjusting the rotated x-axis text label**

```{R}
ggparcoord(data = wh, 
           columns = c(7:12), 
           groupColumn = 2,
           scale = "uniminmax",
           alphaLines = 0.2,
           boxplot = TRUE, 
           title = "Multiple Parallel Coordinates Plots of World Happines Variables by Region") +
  facet_wrap(~ Region) + 
  theme(axis.text.x = element_text(angle = 30, hjust=1))
```

## **15.5 Plotting Interactive Parallel Coordinates Plot: parallelPlot methods**

### **15.5.1 The basic plot**

The code chunk below plot an interactive parallel coordinates plot by using `parallelPlot()`.

```{R}
wh <- wh %>%
  select("Happiness score", c(7:12))
parallelPlot(wh,
             width = 320,
             height = 250)
```

### **15.5.2 Rotate axis label**

In the code chunk below, `rotateTitle` argument is used to avoid overlapping axis labels.

```{R}
parallelPlot(wh,
             rotateTitle = TRUE)
```

### **15.5.3 Changing the colour scheme**

We can change the default blue colour scheme by using `continousCS` argument as shown in the code chunl below.

```{R}
parallelPlot(wh,
             continuousCS = "YlOrRd",
             rotateTitle = TRUE)
```

### **15.5.4 Parallel coordinates plot with histogram**

In the code chunk below, `histoVisibility` argument is used to plot histogram along the axis of each variables.

```{R}
histoVisibility <- rep(TRUE, ncol(wh))
parallelPlot(wh,
             rotateTitle = TRUE,
             histoVisibility = histoVisibility)
```

## **15.6 References**

-   [*ggparcoord()*](http://ggobi.github.io/ggally/reference/ggparcoord.html) of [**GGally**](http://ggobi.github.io/ggally/index.html) package

-   [**parcoords** user guide](https://cran.r-project.org/web/packages/parcoords/parcoords.pdf)

-   [**parallelPlot**](https://cran.r-project.org/web/packages/parallelPlot/parallelPlot.pdf)
