---
title: "13  Creating Ternary Plot with R"
author: "TzuTing Huang, (hannah)"
date: "February 1, 2025"
date-modified: "last-modified"
execute:
  warning: false
---

## **13.1 Overview**

Ternary plots are a type of graph used to show the distribution and relationship of three-part compositional data. For example, they can represent the proportions of young, working-age, and elderly populations in a society, or the mix of sand, silt, and clay in soil. The plot is shaped like a triangle, with each side scaled from 0 to 1. Each corner represents one of the three components. A point on the plot is positioned in such a way that if you draw a perpendicular line from it to each side of the triangle, the intersections will indicate the values of the three components

## **13.2 Installing and launching R packages**

two main R packages will be used：

-   [**ggtern**](http://www.ggtern.com/), a ggplot extension specially designed to plot ternary diagrams. The package will be used to plot static ternary plots.

-   [**Plotly R**](https://plot.ly/r/), an R package for creating interactive web-based graphs via plotly’s JavaScript graphing library, plotly.js . The **plotly R** libary contains the *ggplotly* function, which will convert **ggplot2** figures into a Plotly object.

```{r}
pacman::p_load(plotly, ggtern, tidyverse)

```

## **13.3 Data Preparation**

```{R}
#Reading the data into R environment
pop_data <- read_csv("data/respopagsex2000to2018_tidy.csv") 
```

```{r}
#Deriving the young, economy active and old measures
agpop_mutated <- pop_data %>%
  mutate(`Year` = as.character(Year))%>%
  spread(AG, Population) %>%
  mutate(YOUNG = rowSums(.[4:8]))%>%
  mutate(ACTIVE = rowSums(.[9:16]))  %>%
  mutate(OLD = rowSums(.[17:21])) %>%
  mutate(TOTAL = rowSums(.[22:24])) %>%
  filter(Year == 2018)%>%
  filter(TOTAL > 0)
```

## **13.4 Plotting Ternary Diagram with R**

### **13.4.1 4.1 Plotting a static ternary diagram**

Use ***ggtern()*** function of **ggtern** package to create a simple ternary plot.

```{R}
#Building the static ternary plot
ggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +
  geom_point()
```

```{R}
#Building the static ternary plot
ggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +
  geom_point() +
  labs(title="Population structure, 2015") +
  theme_rgbw()
```

### **13.4.2 Plotting an interative ternary diagram**

The code below create an interactive ternary plot using ***plot_ly()*** function of **Plotly R**.

```{R}
# reusable function for creating annotation object
label <- function(txt) {
  list(
    text = txt, 
    x = 0.1, y = 1,
    ax = 0, ay = 0,
    xref = "paper", yref = "paper", 
    align = "center",
    font = list(family = "serif", size = 15, color = "white"),
    bgcolor = "#7B7B7B", bordercolor = "black", borderwidth = 2
  )
}

# reusable function for axis formatting
axis <- function(txt) {
  list(
    title = txt, tickformat = ".0%", tickfont = list(size = 10)
  )
}

ternaryAxes <- list(
  aaxis = axis("Young"), 
  baxis = axis("Active"), 
  caxis = axis("Old")
)

# Initiating a plotly visualization 
plot_ly(
  agpop_mutated, 
  a = ~YOUNG, 
  b = ~ACTIVE, 
  c = ~OLD, 
  color = I("black"), 
  type = "scatterternary"
) %>%
  layout(
    annotations = label("Ternary Markers"), 
    ternary = ternaryAxes
  )
```
